@mixin transition($property, $duration, $timing, $delay) {
  @if $property == 'transform' {
    -webkit-transition: -webkit-transform $duration $timing $delay;
    -moz-transition: -moz-transform $duration $timing $delay;
    -o-transition: -o-transform $duration $timing $delay;
    transition: transform $duration $timing $delay;
  } @else {
    -webkit-transition: $property $duration $timing $delay;
    -moz-transition: $property $duration $timing $delay;
    -o-transition: $property $duration $timing $delay;
    transition: $property $duration $timing $delay;
  }
}

@mixin transform($functions) {
  -webkit-transform: $functions;
  -moz-transform: $functions;
  -o-transform: $functions;
  transform: $functions;
}

@mixin display-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin align-items($item-alignment) {
  -webkit-align-items: $item-alignment;
  align-items: $item-alignment;
}

@mixin border-radius($radii) {
  -webkit-border-radius: $radii;
  -moz-border-radius: $radii;
  border-radius: $radii;
}

@mixin user-select($user-select-option) {
  -webkit-user-select: $user-select-option;
  -moz-user-select: $user-select-option;
  -ms-user-select: $user-select-option;
  user-select: $user-select-option;
}

$wobble-bezier: cubic-bezier(.1,3,.75,0.5);

* {
  padding: 0;
  margin: 0;
}

html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

body {
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

header#navigation {
  
  nav#menu {
    position: fixed;
    background-color: #333;
    padding: 10% 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
    
    $nav-duration: 1s;
    $a-duration: 1s;
    $nav-timing: cubic-bezier(.25,1,.5,1);
    $a-timing: $nav-timing;
    
    @include transition(transform, $nav-duration, $nav-timing, 0s);
    
    a {
      @include display-flex;
      @include align-items(center);
      text-align: center;
      color: #818181;
      text-decoration: none;
      width: 90%;
      max-width: 600px;
      margin: 0 auto;
      height: 25%;
      position: relative;
      overflow: hidden;
      
      @include transition(transform, $a-duration, $a-timing, 0s);
      
      &.hover {
        background-color: rgba(255,255,255,0.1);
        
        span {
          color: white;
        }
      }
      
      &.mousedown {
        background-color: rgba(255,255,255,0.2);
        
        span {
          color: white;
        }
      }
      
      span {
        display: block;
        width: 100%;
        text-align: center;
        position: relative;
        z-index: 3;
        
        &.active {
          color: white;
        }
      }
    }
  }
  
  &.closed {
    nav#menu {
      @include transform(translateY(-100%));
      
      a:nth-child(odd) {
        @include transform(translateX(-100%));
      }
      
      a:nth-child(even) {
        @include transform(translateX(100%));
      }
    }
  }
  
  div#burger {
    position: fixed;
    z-index: 2;
    right: 40px;
    top: 40px;
    cursor: pointer;
    padding: 5px;
    background-color: transparent;
    
    $i-height: 16px;
    $i-color: #818181;
    $i-width-factor: 8;
    $i-margin-factor: 1;
    $i-width: $i-height * $i-width-factor;
    $i-margin: $i-height * $i-margin-factor;
    $i-midpoint: $i-height + $i-margin;

    $i-lines-offset: 0.25 * $i-margin;
    $i-cross-offset: 5deg;
    $i-lines-force: 0.2;
    $i-cross-force: 0.1;

    $i-duration: 0.4s;
    $burger-duration: 2 * $i-duration;

    $i-timing: cubic-bezier(.25,1.5,.5,1);
    $burger-timing: cubic-bezier(.25,1.5,.5,1);
    
    @include user-select(none);
    @include transition(transform, $burger-duration, $burger-timing, 0s);
    
    i {
      display: block;
      width: $i-height * $i-width-factor;
      height: $i-height;
      margin: $i-margin;
      background-color: $i-color;
      @include border-radius($i-height);
      @include transition(transform, $i-duration, $i-timing, 0s);
    }
    
    &.cross {
      @include transform(rotate(90deg));
    }

    &.cross.closing, &.lines {
      @include transform(rotate(0));
    }

    &.lines.hover {
      i:nth-child(1) {
        @include transform(translateY(-$i-lines-offset));
      }

      i:nth-child(3) {
        @include transform(translateY($i-lines-offset));
      }
    }

    &.lines.mousedown {
      i:nth-child(1) {
        @include transform(translateY(- 2 * $i-lines-offset));
      }

      i:nth-child(3) {
        @include transform(translateY(2 * $i-lines-offset));
      }
    }

    &.cross {
      i:nth-child(1) {
        @include transform(translateY($i-midpoint) rotate(45deg));
      }
      i:nth-child(2) {
        opacity: 0;
      }
      i:nth-child(3) {
        @include transform(translateY(-$i-midpoint) rotate(-45deg));
      }
    }

    &.cross.hover  {
      i:nth-child(1) {
        @include transform(translateY($i-midpoint) rotate(45 - $i-cross-offset));
      }
      i:nth-child(3) {
        @include transform(translateY(-$i-midpoint) rotate(-45 + $i-cross-offset));
      }
    }

    &.cross.mousedown  {
      i:nth-child(1) {
        @include transform(translateY($i-midpoint) rotate(45 - 2 * $i-cross-offset));
      }
      i:nth-child(3) {
        @include transform(translateY(-$i-midpoint) rotate(-45 + 2 * $i-cross-offset));
      }
    }

    &.lines.opening, &.cross.closing {
      i:nth-child(1) {
        @include transform(translateY($i-midpoint));
      }
      i:nth-child(3) {
        @include transform(translateY(-$i-midpoint));
      }
    }
  }
}