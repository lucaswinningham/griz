/* global $ */

$( document ).on('turbolinks:load', function() {
  var about = 'section#about';
    var container = about + ' div#about-container';
      var cards = container + ' div#about-cards';
        var card = cards + ' div.about-card';
          var tondo = card + ' div.about-card-tondo';
        var contactCard = cards + ' div#about-card-contact';
            var contact = contactCard + ' div a#about-contact';
      var breadcrumbs = container + ' div#about-breadcrumbs';
        var breadcrumb = breadcrumbs + ' div';
  
  var $about = $(about);
    var $container = $(container);
      var $cards = $(cards);
        // Cards defined below after insertion
          // Tondos defined below after card insertion
        var $contactCard = $(contactCard);
            var $contact = $(contact);
      var $breadcrumbs = $(breadcrumbs);
        var $breadcrumb = $(breadcrumb);
  
  (function() {
    var timeout = window.setTimeout(function() {
      $breadcrumb.each(function(i) {
        $(this).css({
          left: (100 * (i + 1) / ($breadcrumb.length + 1)) + '%',
        });
      });
      
      window.clearTimeout(timeout);
    }, 1500);
  }());
  
  $breadcrumb.first().addClass('active');
  
  var content = [
    {
      tease: 'I\'M LUKE',
      info: 'I enjoy creating beautifully designed experiences',
      summary: 'Contact me for your next website or job',
      tondo: '<%= asset_path "bear.jpg" %>',
    },
    {
      tease: 'MY BESTFRIEND',
      info: 'Going strong for 7 years, I\'m the luckiest guy alive to have Leigh',
      summary: 'I love spending everyday with her',
      tondo: '<%= asset_path "leigh.jpg" %>',
    },
    {
      tease: 'MILLIE THE PUP',
      info: 'Rescued and sassy, she loves playing with bones and howling at strangers',
      summary: 'Will demand play before cuddles',
      tondo: '<%= asset_path "millie.jpg" %>',
    },
  ];
  
  content.forEach(function(val, i) {
    var tondo = '<div class="about-card-tondo"></div>';
    var tease = '<div class="about-card-tease"><span>' + val.tease + '</span></div>';
    var info = '<div class="about-card-info"><span>' + val.info + '</span></div>';
    var summary = '<div class="about-card-summary"><span>' + val.summary + '</span></div>';
    var card = '<div class="about-card">' + tondo + tease + info + summary + '</div>';
    
    $(card).insertBefore($contactCard);
  });
  
  var $card = $(card);
  var $tondo = $(tondo);
  
  $tondo.each(function(i) {
    $(this).css({
      backgroundImage: 'url(' + content[i].tondo + ')',
    });
  });
  
  (function() {
    var timeout = window.setTimeout(function() {
      $card.first().addClass('focus');
      
      window.clearTimeout(timeout);
    }, 500);
  }());
  
  var $responsive = $([breadcrumb, tondo, contact].join(', '));
  
  var fixedBuffer = 100;
  var originalUserPosition;
  
  var sectionFill = function() {
    $about.css({
      'height': (window.innerHeight + fixedBuffer) + 'px',
      'padding-bottom': fixedBuffer + 'px',
    });
    
    $container.css({
      'height': window.innerHeight + 'px',
    });
  };
  
  sectionFill();
  
  var handleFixed = function() {
    var scrollPosition = Math.round($( document ).scrollTop());
    var fixedTop = $about.offset().top;
    var fixedBottom = $about.offset().top + fixedBuffer;
    
    if (scrollPosition < fixedTop) {
      $container.css({
        'position': 'absolute',
        'top': '0px',
      });
    } else if (scrollPosition > fixedBottom) {
      $container.css({
        'position': 'absolute',
        'top': fixedBuffer + 'px',
      });
    } else {
      $container.css({
        'position': 'fixed',
        'top': '0px',
      });
    }
  };
  
  var sizeTondo = function($thisTondo) {
    var cardHeight = $card.height();
    var cardWidth =  $card.width();
    var pixelGutter = 15;
    var tondoRatio = 0.4;
    var pixelOffsetTop;
    var pixelOffsetLeft;
    var tondoSide =  (cardHeight > cardWidth ? cardWidth : cardHeight);
    
    if ($thisTondo.hasClass('focus')) {
      tondoSide -= pixelGutter * 2;
      pixelOffsetTop = cardHeight / 2;
      pixelOffsetLeft = cardWidth / 2;
    } else {
      tondoSide *= tondoRatio;
      tondoSide -= pixelGutter * 2;
      pixelOffsetTop = tondoSide / 2 + pixelGutter;
      pixelOffsetLeft = tondoSide / 2 + pixelGutter;
    }
    
    $thisTondo.css({
      height: tondoSide,
      width: tondoSide,
      top: pixelOffsetTop,
      left: pixelOffsetLeft,
    });
  };
  
  var sizeAllTondos = function() {
    $tondo.each(function(i) {
      sizeTondo($(this));
    });
  };
  
  sizeAllTondos();
  
  $( window ).resize(function() {
    sectionFill();
    
    var timeout = window.setTimeout(function() {
      sizeAllTondos();
      window.clearTimeout(timeout);
    }, 1100);
  });
  
  $( window ).scroll(function() {
    handleFixed();
    
    var timeout = window.setTimeout(function() {
      sizeAllTondos();
      window.clearTimeout(timeout);
    }, 1100);
  });
  
  var setContent = function(index) {
    $card.each(function(i) {
      if (i == index) {
        $(this).removeClass('away').addClass('focus');
      } else if (i < index) {
        $(this).removeClass('focus').addClass('away');
      } else {
        $(this).removeClass('away focus');
      }
    });
  };
  
  var updateContent = function(e) {
    e.preventDefault();
    if ($(this).hasClass('mousedown')) {
      $(this).removeClass('mousedown hover');
      
      if (!$(this).hasClass('active')) {
        setContent($(this).index());
        $breadcrumb.removeClass('active');
        $(this).addClass('active');
      }
    }
  };
  
  var enableCardTransitionDuration = function(enable) {
    if (enable) {
      $card.css({
        '-webkit-transition-duration': '',
        '-moz-transition-duration': '',
        '-o-transition-duration': '',
        'transition-duration': '',
      });
    } else {
      $card.css({
        '-webkit-transition-duration': '0s',
        '-moz-transition-duration': '0s',
        '-o-transition-duration': '0s',
        'transition-duration': '0s',
      });
    }
  };
  
  var detentCard = function($thisCard) {
	  var cardLeftPx = parseInt($thisCard.css('left'), 10);
	  var cardIndex = $thisCard.index();
	  
	  // Assume 96px = 1in
	  if (cardLeftPx < -96 && cardIndex < $card.length - 1) {
	    cardIndex += 1;
	  } else if (cardLeftPx > 96 && cardIndex > 0) {
	    cardIndex -= 1;
	  }
	  
	  setContent(cardIndex);
	  
    $breadcrumb.removeClass('active');
    
    $breadcrumb.each(function(i) {
      if (i == cardIndex) {
        $(this).addClass('active');
      }
    });
	  
  	$thisCard.css({left: ''});
  };
  
  $card.on('mousedown', function(e) {
    $(this).addClass('mousedown');
    enableCardTransitionDuration(false);
    originalUserPosition = {x: e.pageX, y: e.pageY};
  });
  
  $card.on('mouseup touchend touchcancel', function() {
    enableCardTransitionDuration(true);
    detentCard($(this));
    $(this).removeClass('mousedown hover');
  });
  
  $card.on('mousemove', function(e) {
    // e.preventDefault();
    var userPosition = {x: e.pageX, y: e.pageY};
    
  	if ($(this).hasClass('mousedown')) {
    	$(this).css({left: userPosition.x - originalUserPosition.x});
    }
  });
  
  $card.on('touchmove', function(e) {
    if ($(this).hasClass('mousedown')) {
      var userPosition = {
        x: e.originalEvent.touches[0].pageX,
        y: $(window).scrollTop()
      };
      
      var deltaPosition = {
        x: Math.abs(userPosition.x - originalUserPosition.x),
        y: Math.abs(userPosition.y - originalUserPosition.y)
      };
      
    	if (deltaPosition.x > deltaPosition.y) {
      	$(this).css({left: userPosition.x - originalUserPosition.x});
      } else {
        // Reset if user most likely scrolling
        // Force touchend and touchstart to reenable
        // Assume 96px = 1in
        if (deltaPosition.y > 96) {
          $(this).removeClass('hover mousedown');
          enableCardTransitionDuration(true);
          detentCard($(this));
        }
        
        enableCardTransitionDuration(true);
        detentCard($(this));
      }
    }
  });
  
  $card.on('mouseleave', function() {
    $card.removeClass('mousedown hover');
    originalUserPosition = null;
  });
  
  $card.on('touchstart', function(e) {
    $(this).addClass('hover mousedown');
    enableCardTransitionDuration(false);
    originalUserPosition = {
      x: e.originalEvent.touches[0].pageX,
      y: $(window).scrollTop()
    };
  });
  
  $responsive.on('mousedown', function() {
    $(this).addClass('mousedown');
  });
  
  // On desktop: bug
  // Despite preventing default, screen actually follows link when mouseup event used instead of click
  $contact.on('click touchend touchcancel', function(e) {
    e.preventDefault();
    
    $contact.removeClass('mousedown hover');
    
    if ($( window ).scrollTop() < fixedBuffer) {
      $( window ).scrollTop(fixedBuffer);
    }
    
    var userScrollEvents = 'scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove';
    
    var autoScrollStop = function() {
      $('html, body').stop();
      $('html, body').off(userScrollEvents, autoScrollStop);
    };
    
    $('html, body').on(userScrollEvents, function() {
      $('html, body').stop();
      $('html, body').off(userScrollEvents, autoScrollStop);
    });
    
    $('html, body').animate({scrollTop: $('#contact').offset().top}, 3000, function() {
      $('html, body').off(userScrollEvents, autoScrollStop);
    });
    
    // Reset card properties
    enableCardTransitionDuration(true);
    detentCard($contactCard);
    $contactCard.removeClass('mousedown hover');
    
    return false;
  });
  
  $breadcrumb.on('mouseup touchend touchcancel', updateContent);
  
  $tondo.on('mouseup touchend touchcancel', function(e) {
    e.preventDefault();
    $(this).toggleClass('focus');
    sizeTondo($(this));
  });
  
  $responsive.on('mouseenter', function() {
    $(this).addClass('hover');
  });
  
  $responsive.on('mouseleave', function() {
    $(this).removeClass('hover mousedown');
  });
  
  $responsive.on('touchstart', function(e) {
    e.preventDefault();
    $(this).addClass('hover mousedown');
  });
});
